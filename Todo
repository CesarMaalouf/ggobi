ExcelReader is for windows only. Make certain
we don't try to build this on Unix.

Provide a screen to provide information about the source of
the data (e.g. filename, mode). - now in the status bar.

Get rid of the hard coded arrays of mode names, display types, 
etc. if they are now dynamically computed. (for extensibility)
  Get rid of the const's where not appropriate

Move the header files to <ggobi/filename.h> rather than <filename.h>.

Barchart doesn't shift via moving the ruler(s)

Fix the DisplayOptions and set_display_options to allow
an MVC approach so that we can support programmatic setting.

Add warning messages to XML parser.
  E.g. reading incomplete or excess elements.

Plugins
  showPluginInfo should color the input plugins differently.
   Now in a different panel.

  Should use separate tabs and a different display for the 
  different plugin types.
   Done.

  Plugins are not registering themselves as being loaded even after
  they are loaded. Need to set the loaded flag when we indirectly
  call load library.

Demo data files:  Where should they go?  R-ggobi?  Docs?

If read xml file from a URL, then want to compute the relative files
by filling out the InputDescription. See fileset_generate....

Colors:

  We want to be able to specify the activeColorScheme in the
  xml data file.
    Done for name= and file= attributes.
    Want also to be able to:
       1) resolve file references relative to the data file being read;
       2) can read <colormap> (or whatever they should be named) inlined within
          the <activeColorScheme>.
    Should this and other specifications be in ggobidata or data?

  Fix the names and ids in the color map specification. Need to
  determine what is the relationship between these.

  Remove the colormap material from read_xml.c

--------- notes on colors ---------------------------------------

The following files and routines have code that doesn't make sense now,
as we move to relying on colorschemes for all our color specification.

RSGGobiCurrent.c
  RS_GGOBI(getColorMap)(USER_OBJECT_ ggobiId)
  RS_GGOBI(setColorMap)(USER_OBJECT_ vals, USER_OBJECT_ names, USER_OBJECT_ ggo
biId)
  GGOBI(setColorMap)(NUMERIC_DATA(vals), GET_LENGTH(vals)/3, gg);

ggobi.dtd
  colormap (I think)
  specification of fg and bg colors

read_xml.c
  most anything with colormaps, 

  setColorMap(attrs, data);
  setColormapEntry(attrs, data);
  setColorValue(XMLParserData *data, const xmlChar *line, gint len)
  xmlParseColorMap(const gchar *fileName, gint size, XMLParserData *data)

write_xml.c
  some references to defaultColorName; I don't know what that is
  gg->colorNames (no longer exist)
  info->defaultColor (don't know what that is)

color.c
make_ggobi.c
  these files make mention of
    sessionOptions->info->bgColor
  and I don't think that has meaning now.

  Yes it should change the appropriate element in the active color scheme.
  May not want to support this?

-----------------------------------------------------------------

> The RGGobi code has support for referencing colors by name.  It would
> be nice to get this back soon using colorschemes rather than removing
> or turning off the code in the meantime.

Is this working now?

-----------------------------------------------------------------

Adding data:  check for inconsistencies and redundancies in these
routines:
  ggobi-API.c (setData)
  datad.c  (datad_create, datad_init)
  missing.c (missings_datad_cb)

-----------------------------------------------------------------

Adding records:
  Duncan suggested a method for managing (in particular)
  row-wise arrays and vectors so that reallocating them
  would become much less error-prone.


Check the fileselection dialog for read (filesel_ok) to ensure that
the correct data mode is passed.  Take it out of ggobi.

Allow a variable transformation to be pre-specifed in
  the xml file.

Missings:
  We might want to support various levels of missingness: left
    censored, missing, etc.  If we think of missingness as a
    categorical variable, this becomes pretty natural.

Reading in new data
  add an option:  add a new datad or replace an existing one

In progress, needing design discussions:
  Deleting variables: how should plots behave? (disabled for now,
    except during sphering)
    [If plotted, give a warning; otherwise, proceed]
Graphs
  line editing  <- depends on the ability to add a record

Bugs:

various stuff not yet implemented:

API code needed:
  sticky labels
  missing values
     reading/writing the missings matrix
     imputation of missing values
  setting variable ranges
  sphering

I/O -- the biggest part is now in place.  extend
  user options to write_xml.  Add the ability to extend the
  current file set by one or more files.  (wait until the
  dtd has been redesigned to handle multiple datad objects)

saving plots as .svg files
  work out how to do nested transformations for printing parcoords
    and scatmat plots

Tour:
!  dumps core in cloning (and therefore in sphering)
  rulers
  axes
!  put arrays and vectors into the standard routines that debby has developed.
!  tour data structure
!  why is there whip-spin?
  tour API
  PP
!  manual controls
! 1d tour
!  correlation tour
  history controls
  scaling so that it doesn't run off the screen.

Tour (dfs):
  Tour controls:  sometime change the variable circles to
    little rectangles for the 1d modes.
  Add a button that allows variables to be cloned based on the
    current tour projection.  (Clarification:  from what data
    do I construct the new variable(s)?  How many are there?)

When brushing or identifying in parcoords, use leave/enter events to
  change the current_splot?
  
Scaling:
  take advantage of the cleverness of the axes:  l to shift, m/r to scale
      this now works, but not yet in the barchart
  add a thumbnail view that sits just below the scaling controls?
    (to help with the navigation within the plane)

Smoothing -- as a demo, at least, of the use of R

Food for thought:
  * maps; data as polygons -- for summer 2001?  Or will someone
    else do this and link their tool to ggobi?
  * If we bin the screen hierarchically, the bins could be used
    for edges as well as for points.  (ie quad trees)

-- Completed --------------------------------------------------------

! it now works to start ggobi without an argument; a necessary step
! in the API preparation.

! add "size only" to the list of color and glyph, color only, etc.

! Rename gtour_ui.c to tour2d_ui.c

! Use a notebook for the advanced tour panel

! Rename display_reproject to display_tailpipe

! The parallel coordinates plot is drawing (not because it
! receives an expose event, either) before it is configured --
! that's why the lines aren't appearing
  
! Jittering doesn't know whether it's supposed to adjust
! the column jitter value or the missing values jittering
! factor.
  
! I've added an array to the missing values pipeline, but not
! yet changed how missing_world_data is computed.
  
! Try to add the missings work without being too kludgey.
  
! The missing program doesn't pay attention to the .missing
! file unless the file has an na in it.
  
! Noted in xgobi:  ashes are not being recomputed after a
! transformation

! sphering labels aren't being reset

! selected_variables_get isn't always right -- maybe it gets messed
!   up after the clear?  (so maybe it's fixed)

! still having problems with variable selection in scatterplot matrices
!   put a check in splot_redraw

! Brushing:  add brush-jumps-to-cursor

! parcoords: when switching between row and col layout, plot orientation
!   and whiskers aren't being reset correctly
!      added the needed lines to sp_rewhisker; added display_tailpipe
!      to the rearrangement callback.

! when reading from the file menu, the variable labels aren't read
!    I was using filename (with suffix) instead of fname (without)
!    Do I need to keep filename for anything?

! Line brushing

! Erase/hiding/exclusion  (done; could use a redo button)
!   fix up for api

! closing the 'choose symbol' window dumps core
! the brush isn't redrawing when a new color is selected
! the axes aren't being initialized properly for cloned variables.

! reset zoom doesn't work  ; added

! I haven't seen this -- dfs
! there seems to be rounding error in the pipeline. 
! Create a scatterplot, and then resize to something very small.
! Then open it up again to the original size approximately
! and all the points will have gravitated towards the 0,0 
! (upper left) corner.

! sticky labels -- just draw them without the underline and the diamond

! brush_pos should be per-display.  -- in fact made it per-splot

! exclusion:  rebuilding the table on the fly -- just destroy and
!   rebuild, as we did in xgobi

! Window menu:  build it more permanently, and then rebuild it
!   whenever the number (or contents) of the d's has changed.

! moving points -- works in 2d plots

! sphering needs to check whether the d it's working with has
!    changed; done
! sphering: redesigned the tool window

! check for note in transform.c : static variables eliminated

! add notebook controls to the exclusion window

! Variable panel:
!  add a divider between the sections; using etched frames 
!  it doesn't refresh correctly.
!  the menus pop up in the wrong place

! Brushing: 
!  when moving between datad's, the colors shown in the exclude window
!   get confused

! figure out context-sensitive tooltips for the variable
!   selection panel

! user limits need to be checked before transforming

! sphere data into new variables instead of overwriting
!   the existing values -- that will test cloning!

! When we add a dataset after loading the first one (i.e. in a separate
! action) the first tab of the notebook does not have the correct labe
! (it appears as Page 1).

! Moving points
!   add point labels as in xgobi

! Add a close button or menu item to each tool.

!For subsetting et al
!  add an option menu allowing the selection of a datad

! Reset->'show all points' doesn't override the clusters tool.  
!   What to do?

! Set the brush to any region  (manually) and then reduce the
!  size of the window.  Note that the brush size stays
!  fixed and is not scaled and points enter the region but are
!  not "brushed."

! If a new datad is added, the transformation, jittering, and 
!   brush_by_variable tools are not going to show it in their
!   notebooks.  Will they if the notebooks are closed and
!   reopened?

! line type brushing

! It would be nice if the file finder remembered the
!   directory where the last file retrieved was stored.

! Initialize ggobi without data; add a datad from the menu.
! The main menubar does not acquire an Options menu --
! viewmode_submenus_update() is not being called; full_viewmode_set()
! is not being called.

! It's no longer possible to read an ascii file that doesn't
!   have the .dat suffix -- I regard this as a bug.

! From John Plummer: 
!   Let any variable be the label used in identification -- ?
!     (dfs)This makes sense for categorical variables for sure ...

! xmlConvert doesn't write out missing information;
!   probably writing out in xml doesn't either

! We don't yet have a show/hide missings button -- at what
!   level should it operate?  per-datad or per-display?

! Brushing
!   Extend the 'color & glyph groups' tool so that it's possible
!   to change the glyph and/or color of an entire group at once,
!   as in xgobi, by clicking on the symbol.

! If all glyphs are the same, there's no need to write 
!   a glyph description in each record

! moving jittered points is very weird.

!ASH:
!  Add an option to connect the points?  This could be done
!    either in a single line or as lines down to a baseline.
!      Implemented as lines down to a baseline.  If done as
!      a single line, there's some confusion about the color
!      of some of the segments; this way, there's none.

! 1d cycling 

! Have read_xml process colorschemes (should be there already)
! and set the activeColorScheme of the ggobid to the appropriate one.

! Allow a 2-character nickname to be specified in the xml file
!   along with the full variable name.

! It should be possible to read in multiple colorscheme files,
  so the user can read the system file and their own file.
   Done.

! Work out our terminology -- is there a difference between
  a colorscheme and a colormap?  If not, let's just use one
  term.

! As the number of colorschemes increases, use a tree
  to represent them.  (Do this in gtk2 only?)
    Done. See the Tools->Color schemes... dialog.

! Link by variable -- turn this into a cascaded menu (or something)
!   with a list of categorical variables

! Warning message about "linkbyvar when no categorical variable
!   is present" pops up over and over again

! Change the tour control panels.  Let there be a scrolling
!   column of checkboxes, just as there is now, and then add
!   a table of variable circles (separately scrolled) to the
!   right of it, which contains a circle for each variable
!   checked to the left.  (Need to clarify some features of
!   this design -- is there any need for variable selection
!   in the variable circles?)

! Do we need rotation at all?  -- added

!Variable manipulation table
!  If a variable is categorical, show the mapping between its
!    numerical values and its level names.  Another popup?
!    Maybe the variable table can be represented in a tree in
!    gtk2.0.
