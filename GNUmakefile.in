# This is placed in the top-level directory
# of the ggobi suite and is a convenience
# for accessing the different sub-parts of the 
# source base.

TOP=@TOP_DIR@
INSTALL_DIR=@INSTALL_DIR@

PLUGIN_DIRS=@PLUGIN_DIRS@

CUR_DIR=@GGOBI_ROOT@

include Makeconf

INSTALLED_LIB_NAMES=libggobi.@SHLIB_EXT@

all: all-src buildPlugins symlinks

.PHONY:	all-src lib bin

all-src:
	$(MAKE) -C src all
	
bin:
	$(MAKE) -C src ggobi

lib:
	$(MAKE) -C src lib

ifdef LOCAL_INSTALL
symlinks: ggobi ggobidb
else
symlinks:
endif

ggobi:
	ln -s bin/ggobi ggobi
ggobidb:
	ln -s bin/ggobidb ggobidb

include PluginList


HEADER_FILES=$(wildcard include/*.h) 

install: all ggobirc
ifeq (${LOCAL_INSTALL},)
	if test -n "${EMBED_LIB}" ; then  \
	  $(INSTALL) -d $(libdir) ; \
	  $(INSTALL) $(INSTALL_FLAGS) $(EMBED_LIB) $(libdir) ;\
	fi
	if ! test  -d $(ggobi_install_home) ; then \
		mkdir $(ggobi_install_home) ; \
	fi 
	$(INSTALL) -d $(ggobi_install_home)/data
	$(INSTALL) data/* $(ggobi_install_home)/data
	$(INSTALL) ggobirc $(ggobi_install_home)/
	$(INSTALL) -d $(ggobi_install_home)/bin
	$(INSTALL) bin/setLD.bsh $(ggobi_install_home)/bin
	$(INSTALL) bin/ggobi.bin $(ggobi_install_home)/bin
	$(INSTALL) -d $(ggobi_install_home)/lib
	$(INSTALL) lib/* $(ggobi_install_home)/lib
	$(INSTALL) -d $(bindir)
ifneq (${PKG_CONFIG},)
	$(INSTALL) ggobi.pc $(libdir)/pkgconfig
endif
	$(INSTALL) bin/ggobi-config $(bindir)
	$(INSTALL) bin/ggobi $(bindir)
	if ! test -d $(includedir) ; then $(INSTALL) -d $(includedir) ; fi
	$(INSTALL) $(INSTALL_FLAGS) $(HEADER_FILES) include/GGStructSizes.c $(includedir)
	$(INSTALL) -d $(ggobi_install_home)/plugins
	$(MAKE) installPlugins

#	for i in $(PLUGIN_DIRS) ; do \
#	    cd plugins/$$i ; make install ggobi_install_home=$(ggobi_install_home) ; \
#	done
else
	@echo ""
	@echo "Local installation so no need to move files"
	@echo ""
endif


# Need to strip the lib/ from the names
# $(EMBED_LIB:%=$(libdir)/%) $(GTK_EXT:%=$(libdir)/%)
# So use INSTALLED_LIB_NAMES. Need to synchronize these.
uninstall:
	$(RM) $(INSTALLED_LIB_NAMES:%=$(libdir)/%)
	$(RM) -fr $(ggobi_install_home)
	$(RM) $(bindir)/ggobi-config
	$(RM) $(bindir)/ggobi
	$(RM) -fr $(includedir)

ggobirc: buildPlugins
	echo "<ggobirc>" > $@
	echo "<plugins>" >> $@
ifneq (${PLUGIN_DIRS},)
	for i in $(PLUGIN_DIRS) ; do \
	  echo "" >> $@ ; \
	  cat plugins/$$i/plugin.xml >> $@ ; \
	done
endif
	echo "</plugins>" >> $@ 
	echo "</ggobirc>" >> $@

GGOBI_HOME=$(shell pwd)

ifneq (${PLUGIN_DIRS},)
buildPlugins: all-src
	  for f in $(PLUGIN_DIRS) ; do \
	    echo "Building plugin $$f" ; \
	    LOCAL_BUILD=1; export LOCAL_BUILD ; \
	    export GGOBI_HOME ; $(GGOBI_HOME)/plugin $$f ; \
	  done \

installPlugins: buildPlugins
	for f in ${PLUGIN_DIRS} ; do \
	  export GGOBI_HOME ; $(GGOBI_HOME)/plugin --install=$(ggobi_install_home) $$f ; \
	done

else

buildPlugins:
	@echo "No ggobi plugins configured for building"

installPlugins:
	@echo "No plugins to install"

endif

win32-installer: all ggobirc
	iscc win32/ggobi.iss
	
clean:
	for f in src ; do \
	  $(MAKE) -C $$f clean ; \
	done

clean-plugins:
	for f in ${PLUGIN_DIRS} ; do \
	  export GGOBI_HOME ; $(GGOBI_HOME)/plugin --clean $$f ; \
	done

distclean: clean clean-plugins
	for f in $(OBJ) config.log lib/*.so bin/ggobi.bin bin/xmlConvert@EXE_EXT@ ggobi ggobidb; do \
	  if test -f $$f ; then rm $$f ; fi \
	done

doc:

DIST=\
	bin \
	data \
	doc/*.pdf \
	lib \
	man \
	plugins \
	src \
	share \
	*.in \
	INSTALL.html \
	ACKNOWLEDGEMENTS \
	Bugs \
	Changelog \
	CPLicense.txt \
	LGPL.txt \
	Todo \
	VersionInfo \
	INSTALL \
	README \
	README.OSX

dist: doc distclean
	tar cvzf ${TAR_FILE} ${DIST}

# other scripts generated by autoconf
