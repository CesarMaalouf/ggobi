/* Imputation stage.

	Each variable has a imputation type, and various parameters to that type.
	Almost identical to transformation, but random (condition on symbol and colour)
	needs more information.  Could the stage be passed as a parameter to the 
	transformation function?
	
	Todo:
	
	 * convert each imputation type into a transformation object
	 * probably don't need anything in this file - imputation will just be
			another transformation stage.
	
	*/

%h{
  #include "ggobi-stage.h"
%}

%{
%}

class GGobi:Stage:Impute from GGobi:Stage {
  private array_f tform destroy {
    if(&(VAR)) 
      arrayf_free(&(VAR), 0, 0);
  };
  
  override (GGobi:Stage) void
  process_incoming(GGobiStage *self, GGobiPipelineMessage *msg)
  {
  }
  
  private void
  changed_col_foreach(guint j, GGobiStageTransform *self)
  {
  }
  
  public GObject *
  new(GGobiStage *parent)
  {
    GObject *o = G_OBJECT(GET_NEW_VARG("parent", parent, NULL));
    return(o);
  }
  
  override (GGobi:Stage) gdouble
  get_raw_value(GGobi:Stage *self (check null type), guint i, guint j)
  {
  }
  
  override (GGobi:Stage) void
  set_raw_value(GGobi:Stage *self (check null type), guint i, guint j, gdouble value)
  {
  }
  
}
