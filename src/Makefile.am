NULL = 
lib_LTLIBRARIES     = libggobi.la

libggobi_la_GOBS = \
  data-factory-xml.gob \
  gui-transform.gob \
  plugin-factory.gob \
  plugin.gob \
  stage-group.gob \
  stage.gob \
  type-registry.gob \
  variable-group.gob \
  variable.gob \
  $(NULL)

libggobi_la_VALAS = \
  bitset.vala  \
  data-factory-csv.vala \
  data-factory.vala \
  data.vala \
  gui-impute.vala \
  gui-jitter.vala \
  gui-randomize.vala \
  gui-subset.vala \
  gui-varlist.vala \
  gui-viewer.vala \
  imputation.vala \
  input-source-factory.vala \
  input-source-file.vala \
  input-source.vala \
  matrix.vala \
  pipeline-factory.vala \
  pipeline-matrix.vala \
  pipeline-message.vala \
  select.vala \
  stage-ash.vala \
  stage-display.vala \
  stage-filter.vala \
  stage-freeze.vala \
  stage-impute.vala \
  stage-jitter.vala \
  stage-missing.vala \
  stage-randomize.vala \
  stage-screen.vala \
  stage-standardize.vala \
  stage-subset.vala \
  stage-texture.vala \
  stage-transform.vala \
  svd2.vala \
  tour-basis-list.vala \
  tour-basis-pursuit.vala \
  tour-basis-random.vala \
  tour-basis.vala \
  tour-interpolation.vala \
  tour-matrix.vala \
  tour-vector.vala \
  tours.vala \
  transform-abs.vala \
  transform-boxcox.vala \
  transform-log10.vala \
  transform-min-one.vala \
  transform.vala \
  variable-description.vala \
  variable-filter.vala \
  $(NULL)

libggobi_la_METASOURCES = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.c) \
  $(libggobi_la_VALAS:%.vala=%.c)

libggobi_la_METAHEADERS = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.h) \
  $(libggobi_la_VALAS:%.vala=%.h)

libggobi_la_METAOBJECTS = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.lo) \
  $(libggobi_la_VALAS:%.vala=%.lo)

libggobi_la_METASTAMPS = \
  $(libggobi_la_GOBS:%.gob=.%.gob.stamp) .vala.stamp

libggobi_la_LDFLAGS  = @GTK_LIBS@ @LIBXML_LIBS@ @LIBGSF_LIBS@ -version-info 2

libggobi_la_BUILT = \
  array.c \
  ash1d.c \
  barchart.c \
  barchartClass.c \
  barchart_ui.c \
  brush.c \
  brush_api.c \
  brush_bins.c \
  brush_init.c \
  brush_link.c \
  brush_link_ui.c \
  brush_ui.c \
  cluster.c \
  cluster_ui.c \
  color.c \
  color_ui.c \
  cpanel.c \
  display.c \
  display_tree.c \
  display_ui.c \
  edges.c \
  extendedDisplay.c \
  fileio.c \
  fileio_ui.c \
  ggobi-API.c \
  ggobi.c \
  ggobiClass.c \
  identify.c \
  identify_ui.c \
  limits.c \
  lineedit.c \
  lineedit_ui.c \
  main_ui.c \
  make_ggobi.c \
  marshal.c \
  menus.c \
  movepts.c \
  movepts_ui.c \
  noop-toggle.c \
  p1d.c \
  p1d_ui.c \
  parcoords.c \
  parcoordsClass.c \
  parcoords_ui.c \
  pipeline.c \
  plugin.c \
  ppcorr_ui.c \
  projection-indices.c \
  projection-optimization.c \
  read_color.c \
  read_init.c \
  scale_api.c \
  scale_drag.c \
  scale_ui.c \
  scatmat.c \
  scatmatClass.c \
  scatmat_ui.c \
  scatterplot.c \
  scatterplotClass.c \
  scatterplot_ui.c \
  schemes.c \
  schemes_ui.c \
  sphere.c \
  sphere_ui.c \
  splash.c \
  splot.c \
  sp_plot.c \
  sp_plot_axes.c \
  sp_plot_edges.c \
  svd.c \
  texture.c \
  timeplot.c \
  time_ui.c \
  timing.c \
  tour.c \
  tour1d.c \
  tour1d_pp.c \
  tour1d_pp_ui.c \
  tour1d_ui.c \
  tour2d.c \
  tour2d3.c \
  tour2d3_ui.c \
  tour2d_pp.c \
  tour2d_pp_ui.c \
  tour2d_ui.c \
  tourcorr.c \
  tourcorr_ui.c \
  tour_pp_ui.c \
  tsdisplay.c \
  tsPlot.c \
  utils.c \
  utils_gdk.c \
  utils_pango.c \
  utils_ui.c \
  varchange.c \
  varcircles.c \
  varpanel_ui.c \
  vartable.c \
  vartable_nbook.c \
  vartable_ui.c \
  vector.c \
  win32_draw.c \
  writedata_ui.c \
  write_csv.c \
  write_xml.c \
  wvis.c \
  wvis_ui.c \
  xlines.c \
  xyplot.c \
  xyplot_ui.c \
  $(libggobi_la_METASOURCES)

libggobi_la_SOURCES = $(libggobi_la_BUILT) $(libggobi_la_METASTAMPS)

# Apparently, this needs to be done to include BUILT_SOURCES in libtool libs
libggobi_la_LIBADD = $(libggobi_la_METAOBJECTS)
libggobi_la_DEPENDENCIES = $(libggobi_la_METAOBJECTS)

pkginclude_HEADERS = GGobiAPI.h ggobiClass.h tour1d_pp.h \
  noop-toggle.h tour2d_pp.h GGobiEvents.h parcoordsClass.h tour_pp_ui.h \
  barchartDisplay.h plugin.h tsPlot.h brushing.h tsdisplay.h \
  colorscheme.h types.h config.h read_init.h vars.h cpanel.h \
  varseldata.h defines.h scatmatClass.h display.h \
  scatterplotClass.h display_tree.h write_xml.h ggobi-intl.h \
  externs.h splot.h writedata.h fileio.h testEvents.h ggobi.h tour.h \
  projection-optimization.c projection-indices.c \
  $(libggobi_la_METAHEADERS) GGStructSizes.c marshal.h utils.h

# The code generated by Vala need not exist when make is invoked, so the
# generated files are listed in the BUILT_SOURCES variable.

# Automake does not try to regenerate sources for which an object file 
# already exists. Thus, we need a dummy 'stamp' file in BUILT_SOURCES (and
# SOURCES for distribution) that depends on the original Vala files, so that
# when one of them changes, everything is rebuilt.

BUILT_SOURCES =  $(libggobi_la_METASTAMPS) $(libggobi_la_METASOURCES) $(libggobi_la_METAHEADERS)

MAINTAINERCLEANFILES = $(BUILT_SOURCES)

.%.gob.stamp: %.gob
	@GOB2@ --no-touch --no-private-header $<
	@touch $@

if HAS_VALA
.vala.stamp: $(libggobi_la_VALAS) ../vapi/ggobi-compat.vapi ../vapi/libgsf-1.vapi
	@VALAC@ -C --basedir=. --library=ggobi --vapidir=../vapi \
    --pkg=gtk+-2.0 --pkg=libgsf-1 --pkg=ggobi-compat --pkg=libxml-2.0 \
    $(libggobi_la_VALAS)
	@touch $@
else
.vala.stamp: $(libggobi_la_VALAS)
	@echo "Either install the Vala compiler or download a GGobi distribution tarball"
	@exit 2
endif

valavapidir = $(datadir)/vala/vapi
valavapi_DATA = ggobi.vapi


bin_PROGRAMS  = ggobi
ggobi_SOURCES = ggobiMain.c
ggobi_LDADD   = libggobi.la

AM_CPPFLAGS = @DEBUG_CFLAGS@ @GTK_CFLAGS@ @LIBXML_CFLAGS@ @LIBGSF_CFLAGS@
AM_CFLAGS   = -std=gnu99

# Since the Vala files are not actually sources, we specify them in EXTRA_DIST
# so that they are included in the distribution.
EXTRA_DIST = $(libggobi_la_METAS)

# Windows specific
if OS_WIN32
libggobi_la_DEPENDENCIES+=libggobi.def
libggobi_la_LDFLAGS+=-Wc,-s -no-undefined -export-symbols libggobi.def
ggobi_LDFLAGS = -mwindows -s
endif

# The .def file is autogenerated now from all symbols, until we clean up
# ggobi to the point where we can actually maintain the .def file.
libggobi.def:
	echo EXPORTS > $@
	nm -g --defined-only $(libggobi_la_BUILT:%.c=.libs/%.o) > tmp
	sed -n '/^........ [T|C|B] _/s/^........ [T|C|B] _/ /p' tmp >> $@
	rm tmp

