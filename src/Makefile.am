lib_LTLIBRARIES     = libggobi.la

libggobi_la_GOBS = variable.gob stage.gob data.gob stage-transform.gob \
  stage-filter.gob pipeline-factory.gob \
  plugin-factory.gob plugin.gob data-factory-xml.gob \
  stage-subset.gob stage-group.gob transform.gob \
  transform-min-one.gob transform-boxcox.gob transform-abs.gob \
  transform-log10.gob gui-component.gob gui-transform.gob type-registry.gob \
  pipeline-message.gob variable-group.gob renderer.gob renderer-cairo.gob \
  renderer-factory.gob

libggobi_la_VALAS = bitset.vala input-ftp.vala input-http.vala \
  input-source.vala data-factory.vala data-factory-csv.vala \
  input-source-file.vala input-source-ftp.vala input-source-factory.vala \
  input-source-http.vala stage-jitter.vala stage-standardize.vala \
  matrix.vala stage-impute.vala gui-viewer.vala gui-jitter.vala

libggobi_la_METASOURCES = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.c) \
  $(libggobi_la_VALAS:%.vala=%.c)

libggobi_la_METAHEADERS = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.h) \
  $(libggobi_la_VALAS:%.vala=%.h)

libggobi_la_METAOBJECTS = \
  $(libggobi_la_GOBS:%.gob=ggobi-%.lo) \
  $(libggobi_la_VALAS:%.vala=%.lo)

libggobi_la_METASTAMPS = \
  $(libggobi_la_GOBS:%.gob=.%.gob.stamp) .vala.stamp

libggobi_la_LDFLAGS  = @GTK_LIBS@ @LIBXML_LIBS@ @LIBGSF_LIBS@ @GSL_LIBS@ \
  @GLITZ_LIBS@ -version-info 2

libggobi_la_BUILT = array.c ash1d.c barchart.c barchartClass.c \
  barchart_ui.c brush.c brush_api.c brush_bins.c brush_init.c brush_link.c \
  brush_link_ui.c brush_ui.c color.c color_ui.c cpanel.c display.c \
  display_tree.c display_ui.c \
  edges.c cluster.c cluster_ui.c extendedDisplay.c fileio.c ggobi-API.c \
  ggobi.c GGobiAppClass.c ggobiClass.c identify.c identify_ui.c \
  impute.c impute_ui.c fileio_ui.c limits.c lineedit.c \
  lineedit_ui.c main_ui.c make_ggobi.c marshal.c menus.c missing.c \
  movepts.c movepts_ui.c noop-toggle.c p1d.c p1d_ui.c parcoords.c \
  parcoordsClass.c parcoords_ui.c plugin.c pipeline.c ppcorr_ui.c \
  read_init.c read_color.c scale_api.c scale_drag.c \
  scale_ui.c scatmat.c scatmatClass.c scatmat_ui.c scatterplot.c \
  scatterplotClass.c scatterplot_ui.c schemes.c schemes_ui.c sphere.c \
  sphere_ui.c splash.c splot.c sp_plot.c sp_plot_axes.c sp_plot_edges.c \
  subset_ui.c svd.c texture.c timeplot.c time_ui.c timing.c tour.c tour1d.c \
  tour1d_pp.c tour1d_pp_ui.c tour1d_ui.c tour2d.c tour2d3.c tour2d3_ui.c \
  tour2d_pp.c tour2d_pp_ui.c tour2d_ui.c tourcorr.c tourcorr_ui.c tour_pp.c \
  tsdisplay.c tsPlot.c utils.c utils_gdk.c \
  utils_pango.c utils_ui.c varchange.c varcircles.c varpanel_ui.c vartable.c \
  vartable_nbook.c vartable_ui.c vector.c win32_draw.c writedata_ui.c \
  write_csv.c write_xml.c wvis.c wvis_ui.c xlines.c xyplot.c \
  xyplot_ui.c $(libggobi_la_METASOURCES)

libggobi_la_SOURCES = $(libggobi_la_BUILT) $(libggobi_la_METASTAMPS)

libggobi_la_LIBADD = $(libggobi_la_METAOBJECTS) @LIBLTDL@

libggobi_la_DEPENDENCIES = $(libggobi_la_METAOBJECTS)

pkginclude_HEADERS = GGobiAPI.h ggobiClass.h tour1d_pp.h GGobiApp.h \
  noop-toggle.h tour2d_pp.h GGobiEvents.h parcoordsClass.h tour_pp.h \
  barchartDisplay.h plugin.h tsPlot.h brushing.h tsdisplay.h \
  colorscheme.h types.h config.h read_init.h vars.h cpanel.h \
  varseldata.h defines.h scatmatClass.h display.h \
  scatterplotClass.h display_tree.h write_xml.h ggobi-intl.h \
  externs.h splot.h writedata.h fileio.h testEvents.h ggobi.h tour.h \
  $(libggobi_la_METAHEADERS) GGStructSizes.c marshal.h utils.h

BUILT_SOURCES =  $(libggobi_la_METASTAMPS) $(libggobi_la_METASOURCES) $(libggobi_la_METAHEADERS)

MAINTAINERCLEANFILES = $(BUILT_SOURCES)

.%.gob.stamp: %.gob
	@GOB2@ --no-touch --no-private-header $<
	@touch $@

if HAS_VALA
.vala.stamp: $(libggobi_la_VALAS) ../vapi/ggobi.vala ../vapi/gsf.vala
	@VALAC@ --vapidir=../vapi --pkg=gtk+-2.0 --pkg=gsf --pkg=ggobi --pkg=libxml-2.0 $(libggobi_la_VALAS)
	@touch $@
else
.vala.stamp: $(libggobi_la_VALAS)
	@echo "Either install the Vala compiler or download a GGobi distribution tarball"
	@exit 2
endif

bin_PROGRAMS  = ggobi
ggobi_SOURCES = ggobiMain.c
ggobi_LDADD   = libggobi.la

AM_CPPFLAGS = @SRC_DEBUG@ @GTK_CFLAGS@ @LIBXML_CFLAGS@ @LIBGSF_CFLAGS@ \
  @GSL_CFLAGS@ @GLITZ_CFLAGS@ @INCLTDL@
AM_CFLAGS   = -std=gnu99

EXTRA_DIST = $(libggobi_la_METAS)

# Windows specific
if OS_WIN32
libggobi_la_DEPENDENCIES+=libggobi.def
libggobi_la_LDFLAGS+=-Wc,-s -no-undefined -export-symbols libggobi.def
ggobi_LDFLAGS = -mwindows -s
endif

# The .def file is autogenerated now from all symbols, until we clean up
# ggobi to the point where we can actually maintain the .def file.
libggobi.def:
	echo EXPORTS > $@
	nm -g --defined-only $(libggobi_la_BUILT:%.c=.libs/%.o) > tmp
	sed -n '/^........ [T|C|B] _/s/^........ [T|C|B] _/ /p' tmp >> $@
	rm tmp

