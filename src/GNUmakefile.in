TOP=..

include $(TOP)/Makeconf

XML_INC_DIRS=@XML_INC_DIRS@
XML_LIB_DIRS=@XML_LIB_DIRS@

SRC=\
  ggobi-data.c \
  @XML_SRC@ \
  array.c \
  ash1d.c \
  barchart.c \
  barchartClass.c \
  barchart_ui.c \
  brush.c \
  brush_api.c \
  brush_bins.c \
  brush_init.c \
  brush_link.c \
  brush_ui.c \
  color.c \
  color_ui.c \
  cpanel.c \
  dbms.c \
  dbms_ui.c \
  display.c \
  display_tree.c \
  display_ui.c \
  edges.c \
  exclusion.c \
  exclusion_ui.c \
  extendedDisplay.c \
  fileio.c \
  ggobi-API.c \
  ggobi.c \
  GGobiAppClass.c \
  ggobiClass.c \
  help.c \
  identify.c \
  identify_ui.c \
  impute.c \
  impute_ui.c \
  io.c \
  jitter.c \
  jitter_ui.c \
  limits.c \
  lineedit.c \
  lineedit_ui.c \
  main_ui.c \
  make_ggobi.c \
  marshal.c \
  menus.c \
  missing.c \
  movepts.c \
  movepts_ui.c \
  noop-toggle.c \
  p1d.c \
  p1d_ui.c \
  parcoords.c \
  parcoordsClass.c \
  parcoords_ui.c \
  pipeline.c \
  ppcorr_ui.c \
  print.c \
  read_csv.c \
  scale_api.c \
  scale_drag.c \
  scale_ui.c \
  scatmat.c \
  scatmatClass.c \
  scatmat_ui.c \
  scatterplot.c \
  scatterplotClass.c \
  scatterplot_ui.c \
  schemes.c \
  schemes_ui.c \
  smooth_ui.c \
  sphere.c \
  sphere_ui.c \
  splash.c \
  splot.c \
  sp_plot.c \
  sp_plot_axes.c \
  sp_plot_edges.c \
  subset.c \
  subset_ui.c \
  svd.c \
  texture.c \
  timeplot.c \
  time_ui.c \
  tour.c \
  tour1d.c \
  tour1d_pp.c \
  tour1d_pp_ui.c \
  tour1d_ui.c \
  tour2d.c \
  tour2d3.c \
  tour2d3_ui.c \
  tour2d_pp.c \
  tour2d_pp_ui.c \
  tour2d_ui.c \
  tourcorr.c \
  tourcorr_ui.c \
  tour_pp.c \
  transform.c \
  transform_ui.c \
  tsdisplay.c \
  tsPlot.c \
  utils.c \
  utils_gdk.c \
  utils_pango.c \
  utils_ui.c \
  varchange.c \
  varcircles.c \
  varpanel_ui.c \
  vartable.c \
  vartable_nbook.c \
  vartable_ui.c \
  vector.c \
  win32_draw.c \
  writedata_ui.c \
  write_svg.c \
  wvis.c \
  wvis_ui.c \
  xlines.c \
  xyplot.c \
  xyplot_ui.c

ifdef USE_XML
 XML_INC_DIRS=$(foreach el,@XML_INC_DIRS@, $(el))
 XML_LIBS=$(foreach el,@XML_LIB_DIRS@, $(el))
# -lxml2
endif

%.c: ggobi-data.c

ggobi-data.c ggobi-data.h ggobi-data-private.h: data.gob
	gob2 $<

ifdef USE_DBMS
 SRC+= dbms.c dbms_ui.c
endif

OBJ=$(SRC:%.c=%.lo)

CFLAGS= @SRC_DEBUG@ $(GTK_CFLAGS) $(XML_INC_DIRS) @XML_CFLAG_DEFINES@ 
#@DEFS@ - contains the HAVE_CONFIG_H

LIBS=$(XML_LIBS) $(GTK_LIBS) @LIBS@

all: marshal.h bin

.PHONY: bin lib

bin: $(TOP)/bin/ggobi.bin

$(TOP)/bin/ggobi.bin: $(TOP)/lib/libggobi.@SHLIB_EXT@ ggobiMain.o
	$(CC) $(LDFLAGS) -o $@ ggobiMain.o -L$(TOP)/lib -lggobi $(LIBS)

lib: $(TOP)/lib/libggobi.@SHLIB_EXT@

libggobi.so $(TOP)/lib/libggobi.so: $(OBJ)
	$(CC) $(SHLIB_LDFLAGS) -o $@ $(OBJ) $(LIBS)

libggobi.dylib $(TOP)/lib/libggobi.dylib: $(OBJ)
	libtool $(SHLIB_LDFLAGS) -o $@ $(OBJ) $(LIBS) -lgcc

libggobi.def: $(OBJ)
	echo EXPORTS > $@
	nm -g --defined-only $(OBJ) > tmp
	sed -n '/^........ [T|C] _/s/^........ [T|C] _/ /p' tmp >> $@
	rm tmp

libggobi.dll $(TOP)/lib/libggobi.dll: $(OBJ) libggobi.def
	$(CC) $(SHLIB_LDFLAGS) -o $@ libggobi.def -Wl,--out-implib,$(TOP)/lib/libggobi.a $(OBJ) $(LIBS) 

cflags:
	@echo "$(CFLAGS)"

libs:
	@echo "$(LIBS)"

clean:
	for f in $(OBJ) ggobiMain.o marshal.c marshal.h ggobi-data*; do \
	  if test -f $$f ; then rm $$f ; fi \
	done

TAGS:
	etags $(SRC) $(find $(TOP)/include -name '*.h')


marshal.h: marshal.list
	 $(GLIB_GENMARSHAL) --prefix=ggobi_marshal $< --header > $@
marshal.c: marshal.list
	 $(GLIB_GENMARSHAL) --prefix=ggobi_marshal $< --body > $@

make_ggobi.lo: marshal.h
ggobiClass.lo: marshal.h
