%h{
  #include "ggobi-transform.h"
%}
class GGobi:Transform:Abs from GGobi:Transform {
  
  override (GGobi:Transform) gchar *
  variable_name (GGobi:Transform *self, const gchar *name)
  {
    return g_strdup_printf("abs(%s)", name);
  }
  
  override (GGobi:Transform) gdouble *
  forward (GGobi:Transform *self, gdouble *vals, guint n, GGobiVariable *var) 
  { 
    gdouble *result = g_new(gdouble, n);
    for (guint i = 0; i < n; i++)
      result[i] = fabs(vals[i]);
    return result;
  }
  
  /* we just use identity transformation for the reverse */
  override (GGobi:Transform) gdouble *
  reverse (GGobi:Transform *self, gdouble *vals, guint n, GGobiVariable *var) 
  {
    return g_memdup(vals, sizeof(gdouble)*n);
  }
  
  override (GGobi:Transform) gchar *
  get_name(GGobi:Transform *self)
  {
    return g_strdup("Absolute value");
  }
  override (GGobi:Transform) gchar *
  get_description(GGobi:Transform *self)
  {
    return g_strdup("Take the absolute value (|x|)");
  }
}
