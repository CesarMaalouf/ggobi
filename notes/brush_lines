gint
xed_by_brush (gint pta, gint ptb)
/*
 * Determine if line intersects brush.
*/
{
  gint denom;
  gfloat m;              /* slope of the line (pta, ptb) */
  gint x, y;             /* coordinates of the intersection point */
  gint intersection = 0;

/* coordinates of the points, pta and ptb
 *  xg.screen[pta].x, xg.screen[pta].y
 *  xg.screen[ptb].x, xg.screen[ptb].y
*/

  m = ((denom = xg.screen[ptb].x - xg.screen[pta].x) != 0) ?
    (gfloat) (xg.screen[ptb].y - xg.screen[pta].y) / (gfloat) denom :
    0;

/*
 * First check for intersection with the vertical line of the
 * crosshair brush.
*/

  x = brush_pos.x1 + (brush_pos.x2 - brush_pos.x1)/2;
  if (BETWEEN (xg.screen[pta].x, xg.screen[ptb].x, x)) {
    if (BETWEEN (brush_pos.y1, brush_pos.y2,
     (gint) (xg.screen[pta].y + m * (gfloat) (x - xg.screen[pta].x) )))
    {
      intersection = 1;
    }
  }

/*
 * If nothing's turned up yet, check for intersection with the
 * horizontal line of the crosshair brush.
*/
  if (!intersection) {

    y = brush_pos.y1 + (brush_pos.y2 - brush_pos.y1)/2;
    if (BETWEEN (xg.screen[pta].y, xg.screen[ptb].y, y)) {
      if (m != 0) {
        if (BETWEEN (brush_pos.x1, brush_pos.x2,
          (gint) (xg.screen[pta].x + (gfloat) (y - xg.screen[pta].y) / m )))
        {
          intersection = 1;
        }
      }
    }
  }

  /* What about vertical and horizontal lines? */
  if (!intersection && (xg.screen[pta].x == xg.screen[ptb].x))
    if (BETWEEN(brush_pos.x1, brush_pos.x2, xg.screen[pta].x))
      intersection = 1;
  if (!intersection && (xg.screen[pta].y == xg.screen[ptb].y))
    if (BETWEEN(brush_pos.y1, brush_pos.y2, xg.screen[pta].y))
      intersection = 1;

  return (intersection);
}
