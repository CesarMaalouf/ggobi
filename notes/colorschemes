<?xml version="1.0"?>
<colormap name="Green, peach" ncolors="5" type="diverging" criticalvalue="2"
          system="rgb" system_min="0" system_max="1">
<description>
  From Cindy Brewer, a diverging color scheme ranging
  between dark green and peach
</description>
<foreground>
  <color name="Dark Green">
    <red>0.000</red> <green>0.431</green> <blue>0.114</blue>  </color>
  <color name="Light Green"><red>0.302</red><green>0.675</green><blue>0.451</blue> </color>
  <color name="Pale Green"><red>0.702</red><green>0.863</green><blue>0.765</blue> </color> 
  <color name="Pale Peach"> 1.000 1.000 0.800 </color>
  <color name="Peach"> 1.000 0.800 0.502 </color>
</foreground> 
<background>
 <color> 0.000 0.000 0.000 </color>
</background>
<annotations>
 <color> 1.000 1.000 1.000 </color>
</annotations>
</colormap>


<?xml version="1.0"?>
<colormap name="Peach to Dark Red" ncolors="6" type="sequential"
          system="rgb" system_min="0" system_max="1">
<description>
  From Cindy Brewer, a sequential color scheme ranging
  from pale peach to very dark red
</description>
<foreground>
  <color name="Pale peach">     0.498 0.000 0.000 </color>
  <color name="Peach">          0.702 0.000 0.000 </color>
  <color name="Coral">          0.902 0.200 0.000 </color> 
  <color name="Cherry Red">     0.973 0.471 0.169 </color>
  <color name="Brick Red">      1.000 0.753 0.502 </color>
  <color name="Dark Brick Red"> 1.000 0.902 0.800 </color>
</foreground> 
<background>
 <color> 1.000 1.000 1.000 </color>
</background>
<annotations>
 <color> 0.000 0.000 0.000 </color>
</annotations>
</colormap>

I would picture reading these into structures
something like this in ggobi, and appending the colorschemes
to gg->colorschemes, of type GList *.

enum {diverging, sequential, spectral, categorical} colorscaletype;
enum {rgb, hsv, cmy, cmyk} colorsystem;
typedef struct {
  gchar *name;
  gchar *description;
  colorscaletype type;
  colorsystem system;   /*-- system used in the xml description --*/
  gfloat system_min, system_max;  /*-- min and max for system; relevant for rgb --*/
  gint criticalvalue;   /*-- if diverging, where's the center? --*/
  gint n;               /*-- n <= NCOLORS --*/
  gfloat **data;        /*-- the data in the colortable, in its original system and dimensions --*/
  GdkColor *rgb;         /*-- the data converted to rgb, nx3 --*/
  GArray *colorNames;   /*-- in case we have them --*/
  gfloat *bg;           /*-- high-contrast background color, rgb --*/
  GdkColor rgb_bg[3];     /*-- high-contrast background color, rgb --*/
  gfloat *accent;       /*-- high-contrast accent color, rgb --*/
  GdkColor rgb_accent[3]; /*-- high-contrast accent color, rgb --*/
} colorschemed;



