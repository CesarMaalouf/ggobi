# case 1:  the splot is reset with a button click

splot_set_current_cb
{
  turn off the event handlers for the current_splot
  redraw the current splot without a border

  if (current_display != display)
    reset the current display, case 1

  current_splot = new splot
  turn on the event handlers for current_splot
  add the border to the current_splot
}

static gint
splot_set_current_cb (GtkWidget *w, GdkEventButton *event, splotd *sp)
{
  displayd *display = (displayd *) sp->displayptr; 
  splotd *prev_splot = current_splot;
g_printerr ("(splot_set_current_cb)\n");

  if (sp != current_splot) {

    splot_set_current (current_splot, off);

    if (current_display != display)
      display_set_current (display);  /* old one off, new one on */

    current_splot = sp;
    /* add border to current_splot */
    gtk_widget_queue_draw (sp->da);  /*-- redraw_style = QUICK --*/
    splot_set_current (sp, on);

    /* remove border from the previous splot */
    gtk_widget_queue_draw (prev_splot->da);  /*-- redraw_style = QUICK --*/
  }

  return false;  /* so that other button press handlers also get the event */
}

void
splot_set_current (splotd *sp, gboolean state) {
/*
 * Turn on or off the event handlers in sp
*/
  if (sp != null) {
    displayd *display = (displayd *) sp->displayptr;
    cpaneld *cpanel = &display->cpanel;

    sp_event_handlers_toggle (sp, state);
    mode_activate (sp, cpanel->mode, state);  /* brush: bin */
    mode_submenus_activate (sp, cpanel->mode, state);
  }
}

void
display_set_current (displayd *new_display) {
  extern GtkWidget *menubar;
  extern GtkAccelGroup *main_accel_group;

  static GtkWidget *mode_item = NULL;
  extern GtkWidget *scatterplot_mode_menu;
  extern GtkWidget *scatmat_mode_menu;
  extern GtkWidget *parcoords_mode_menu;

  static gboolean firsttime = true;

  gtk_accel_group_unlock (main_accel_group);

  if (!firsttime) {

    switch (current_display->displaytype) {
      case scatterplot:
        gtk_window_set_title (GTK_WINDOW (current_display->window),
          (current_display->missing_p) ? "scatterplot display (missings)" :
                                         "scatterplot display"); 
        submenu_destroy (mode_item);
        break;

      case scatmat:
        gtk_window_set_title (GTK_WINDOW (current_display->window),
          (current_display->missing_p) ? "scatterplot matrix (missings)" :
                                         "scatterplot matrix"); 
        submenu_destroy (mode_item);
        break;

      case parcoords:
        gtk_window_set_title (GTK_WINDOW (current_display->window),
                              "parallel coordinates display");
        submenu_destroy (mode_item);
        break;
    }
  }

  switch (new_display->displaytype) {
    case scatterplot:
      gtk_window_set_title (GTK_WINDOW (new_display->window),
        (new_display->missing_p) ?
          "*** scatterplot display (missings) *** " :
          "*** scatterplot display ***"); 

      scatterplot_main_menus_make (main_accel_group, mode_set_cb);
      mode_item = submenu_make ("_view", 'v', main_accel_group);
      gtk_menu_item_set_submenu (gtk_menu_item (mode_item),
                                 scatterplot_mode_menu); 
      submenu_insert (mode_item, menubar, 2);
      break;

    case scatmat:
      gtk_window_set_title (gtk_window (new_display->window),
        (new_display->missing_p) ?
          "*** scatterplot matrix (missings) *** " :
          "*** scatterplot matrix ***"); 

      scatmat_main_menus_make (main_accel_group, mode_set_cb);
      mode_item = submenu_make ("_view", 'v', main_accel_group);
      gtk_menu_item_set_submenu (gtk_menu_item (mode_item),
                                 scatmat_mode_menu); 
      submenu_insert (mode_item, menubar, 2);
      break;


    case parcoords:
      gtk_window_set_title (gtk_window (new_display->window),
                            "*** parallel coordinates display ***");

      parcoords_main_menus_make (main_accel_group, mode_set_cb);
      mode_item = submenu_make ("_view", 'v', main_accel_group);
      gtk_menu_item_set_submenu (gtk_menu_item (mode_item),
                                 parcoords_mode_menu); 
      submenu_insert (mode_item, menubar, 2);
      break;
  }

  current_display = new_display;
  cpanel_set (&current_display->cpanel);

  gtk_accel_group_lock (main_accel_group);
  firsttime = false;
}

