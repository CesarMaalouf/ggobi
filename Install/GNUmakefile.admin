PKG_NAME=ggobi

USE_XML=1
USE_DBMS=1

createDist:

TMP_INSTALL_DIR=/tmp/ggobi/Install/ggobi

include VersionInfo

PDFLATEX=pdflatex
TAR=tar

DIRS=\
   src include lib bin Docs data gtkext/src gtkext/include examples \
   plugins share


PLUGIN_DIRS=MySQL Postgres DataViewer FileSelector TestInput TestPlugin R
# JVM
#ggvis

SHARE_FILES=Install/ggobirc.in


DATA_SRC_FILES=\
   flea.col flea.colors flea.dat flea.doc flea.glyphs flea.row \
   roos.col roos.dat roos.doc roos.missing roos.row \
   flea.xml pigs.xml ratcns.xml sat.xml sleep.xml eies.xml buckyball.xml \
   stdColorMap.xml prim7.xml olive.col olive.dat olive.row olive.xml \
   places.xml algal-bloom.xml \
   laser.col laser.dat laser.doc laser.xml \
   ggobi.dtd

# Note that COI which provides an example of an XML file containing
# 2 data sets is not included. Can we ship it?

DATA_FILES=$(DATA_SRC_FILES:%=data/%)  notes/colorschemes.xml

LICENSES= LGPL.txt license.html license.txt minterms.html minterms.txt

DOC_TEX_FILES=\
    manual DBMS Embedded RGGobi XML \

DOC_EXTENSION=pdf

DOC_FILES=$(DOC_TEX_FILES:%=Docs/%.$(DOC_EXTENSION)) Docs/ggobi.css Docs/EmbeddingFAQ.html Docs/plotLayout.html $(shell find notes -name '*.jpg')

C_SRC_FILES=$(SRC) $(XML_SRC) xmlConvert.c 

C_HEADER_FILES=\
  GGobiAPI brushing cpanel datad defines display display_tree \
  externs ggobi noop-checkbutton read_xml  \
  splot types vars varseldata write_xml writedata vartable gtkext fileio \
  print tour1d_pp tour2d_pp tour_pp splash read_init write_state \
  plugin colorscheme \
  dbms dbms_ui

Install/configure: Install/configure.in
	(cd Install ; autoconf)


GTK_EXTRA_SRC= gtkextruler.c   gtkexthruler.c   gtkextvruler.c 
LGPL_HEADERS:=$(GTK_EXTRA_SRC:%.c=%.h)
LGPL_SRC=$(GTK_EXTRA_SRC) mt19937-1.c cokus.c


createDist: Install/configure $(DOC_FILES) $(DATA_FILES)
	if test -d $(TMP_INSTALL_DIR) ; then rm -fr $(TMP_INSTALL_DIR) ; fi
	mkdir -p $(TMP_INSTALL_DIR)
	chgrp xgobi $(TMP_INSTALL_DIR) ; chmod g+ws $(TMP_INSTALL_DIR) ;
	for d in $(DIRS) ; do \
	   mkdir -p $(TMP_INSTALL_DIR)/$$d ; \
	done
	chgrp -R xgobi $(TMP_INSTALL_DIR)
	chmod -R g+w $(TMP_INSTALL_DIR)
	cp $(LICENSES:%=LICENSING/%) Install/INSTALL Install/README Install/INSTALL-xml.html $(TMP_INSTALL_DIR)
	cp Install/configure.in Install/configure  Install/Makeconf.in Install/GNUmakefile.in $(TMP_INSTALL_DIR)
	cp Install/GNUmakefile_src.in $(TMP_INSTALL_DIR)/src/GNUmakefile.in
	cp Install/config.h.in $(TMP_INSTALL_DIR)/src/
	cp Install/setLD.bsh.in Install/setLD.csh.in Install/ggobi-config.in $(TMP_INSTALL_DIR)/bin
	cp Install/ggobi.in $(TMP_INSTALL_DIR)/bin
	cp Install/bugTemplate.in $(TMP_INSTALL_DIR)/
	cp Install/local.config.in $(TMP_INSTALL_DIR)/
	cp VersionInfo $(TMP_INSTALL_DIR)/src
	cp Makefile.win32 $(TMP_INSTALL_DIR)/src
	if test -n "${DOC_FILES}" ; then cp $(DOC_FILES) $(TMP_INSTALL_DIR)/Docs ; fi
	cp $(DATA_FILES) $(TMP_INSTALL_DIR)/data
	cp notes/ggobirc $(TMP_INSTALL_DIR)/examples
	cp $(C_SRC_FILES) $(TMP_INSTALL_DIR)/src
	cp $(C_HEADER_FILES:%=%.h) $(TMP_INSTALL_DIR)/include
	cp $(LGPL_SRC) $(TMP_INSTALL_DIR)/gtkext/src
	cp $(LGPL_HEADERS) $(TMP_INSTALL_DIR)/gtkext/include
	cp Install/GNUmakefile_gtkext.in $(TMP_INSTALL_DIR)/gtkext/src/GNUmakefile.in
	cp $(SHARE_FILES) $(TMP_INSTALL_DIR)/share
	$(MAKE) ADMIN=1 copyPlugins


CUR_DIR=$(shell pwd)

tmp:
	@echo "$(CUR_DIR)"

lgpl lgpl.tar.gz:
	if test ! -d $(TMP_INSTALL_DIR) ; then mkdir -p $(TMP_INSTALL_DIR) ; fi
	cp $(LGPL_SRC) $(TMP_INSTALL_DIR)/src
	cp $(LGPL_HEADERS) $(TMP_INSTALL_DIR)/include
	(cd $(TMP_INSTALL_DIR)/.. ; $(TAR) zcvf $(CUR_DIR)/lgpl.tar.gz $(LGPL_SRC:%=$(PKG_NAME)/src/%) $(LGPL_HEADERS:%=$(PKG_NAME)/include/%))



$(TAR_FILE) tar $(PKG_NAME).tar.gz: createDist
	(cd $(TMP_INSTALL_DIR)/.. ; $(TAR) zcvf $(CUR_DIR)/$(TAR_FILE) $(PKG_NAME))

$(XML_TAR_FILE) xmlTar: createDist
	cp $(LIBXML_TAR_FILE) $(TMP_INSTALL_DIR)/libxml.tar.gz
	(cd $(TMP_INSTALL_DIR)/.. ; $(TAR) zcvf $(CUR_DIR)/$(XML_TAR_FILE) $(PKG_NAME))



%.pdf: %.tex
	(cd $(@D) ; TEXINPUTS=$(TEXINPUTS):$(OMEGA_HOME)/Docs:: ; export TEXINPUTS ; $(PDFLATEX) $(<F))

notes/%.ps: notes/%.tex
	$(MAKE) -C $(@D) $(@F)

copyPlugins:
	for f in $(PLUGIN_DIRS) ; do \
	   $(MAKE) ADMIN=1 -C plugins/$$f createDist INSTALL_DIR=$(TMP_INSTALL_DIR)/plugins ; \
	done
