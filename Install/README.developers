Adding new files to depository:
==============================

Edit Install/GNUmakfile_src.in 
  to add the new .c files

Edit Install/GNUmakefile.admin
  to add new .h files

Checking installation:
=====================

make ADMIN=1 DOC_TEX_FILES=
cd /tmp/ggobi/Install/ggobi
./configure
make (or gmake)
bin/ggobi data/flea

Creating new modules on franz
=============================

Logon to franz and change directory to 
  ~xgobi/CVSRoot

Then do 
   chgrp -R xgobi papers
   chmod -R g+w papers


Creating the Windows Distribution
=================================
We use Inno Setup (http://www.jrsoftware.org) by Jordan Russell to
create a self-installing executable for ggobi.  This handles
installing the relevant files (the executable and 3rd party DLLs),
example data files, and adding ggobi to the user's Start->Programs
menu and optionally creating an icon on their desktop.

One uses the Inno Setup compiler to create the self-extracting and
installing executable. To do this, you need to have version 2.0.9 (or
higher) of Inno Setup installed. Then, run Inno Setup Compiler and
open the file Install/ggobi.iss in the ggobi/ source.  To compile the
installation information, you must have compiled ggobi.exe and have
the necessary 3rd party DLLs available. I have put the latter in a
single directory named libs/ on my machine.

Updating the Web Page
=====================

Update the GGOBI_SRC directory, so that the notes documents are
updated. Then pdflatex the documentation files in the $GGOBI_SRC/notes
directory because these will be loaded up from this directory.

To checkout the CVS module,  use
   cvs co Web
with the CVSROOT variable set to
   franz.stat.wisc.edu:/home/xgobi/CVSRoot
and CVS_RSH set to
   ssh

Next, to get it to appear on the Web site, you can install the
new version of the pages. To do this, from within the 
checked out version of the Web/ module, type
  gmake

(You may need to set GGOBI_SRC to the location of the src code, and
hence the notes directory which contains pieces for the web site. And
also TAR_FILE, RGGOBI_TAR_FILE to the locations of the tar.gz files.)

Preparing a Release
===================

ssh franz.stat.wisc.edu

alias R=/usr/bin/R
export R_HOME=`R RHOME`
export CVSROOT=/home/xgobi/CVSRoot
export OMEGA_HOME=~omega/org/omegahat
export TEXINPUTS=$TEXINPUTS:$OMEGA_HOME

0. Make sure all three directories are up to date.

  cd ggobi
  cvs update -d -P
  cd RSggobi
  cvs update -d -P
  cd Web
  cvs update -d -P

1. Do local testing
     cd ggobi
     make ADMIN=1 DOC_TEX_FILES=
     cd /tmp/ggobi/Install/ggobi
     ./configure  --with-xml=/usr/lib/libxml2
         or, if that isn't working properly,
     ./configure  --with-xml
     make

2. Build the tar file, from the ggobi directory, not the test directory.

  make ADMIN=1 DOC_TEX_FILES= tar

3. cd Web, make install

(You may need to set GGOBI_SRC to the location of the src code, and
hence the notes directory which contains pieces for the web site. And
also TAR_FILE, RGGOBI_TAR_FILE to the locations of the tar.gz files.

Also with the CVSROOT variable set to
   franz.stat.wisc.edu:/home/xgobi/CVSRoot
and CVS_RSH set to
   ssh
)


R-GGobi Installation from cvs
=============================

build it from cvs

  cd RSggobi
  make ADMIN=1 DOC_FILES="" tar
  (see Omegahat below)

install it

1. if it's a local install

 R CMD INSTALL -l /usr/dfs/ggobi/R Rggobi_0.3-0.tar.gz
 > library(Rggobi, lib.loc = ".")

2. if it's in the R home

 R CMD INSTALL Rggobi_0.3-0.tar.gz
 > library(Rggobi)

Omegahat include files:

Pick up this file:
  http://www.omegahat.org/download/OmegahatIncludes.tar.gz

cd ~/omegahat  
  Under this directory, there exists org/omegahat
    and OMEGA_HOME=~/omegahat/org/omegahat
tar xvf OmegahatIncludes.tar 

