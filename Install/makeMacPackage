#!/bin/sh


while test -n "${1}" ; do
 case ${1} in 
   --no-package)
     NO_PACKAGE="true" ;;
   --release-dir=)
     GGOBI_RELEASE_DIR=`echo "${1}" | sed -e 's/--release-dir=//'` ;;
 esac
 shift;
done


# Where to pick up the build.
BINARY_DIR=${BINARY_DIR-$HOME/Install/ggobi}
# A directory in which we will stage the relevant files for the Mac package. 
TMP_DIR=${TMP_DIR-/tmp/GGobi.app}


MAKE=${MAKE-make}

# Install the build into the staging area.
# Currently we put these in /usr/local within that staging area to have them copied there.
# We may make this an application or a framework soon.
if test -n "$GGOBI_RELEASE_DIR" ; then
  if ! test -d $TMP_DIR ; then mkdir -p $TMP_DIR ; fi

  cp -r $GGOBI_RELEASE_DIR/include $GGOBI_RELEASE_DIR/lib $GGOBI_RELEASE_DIR/bin $GGOBI_RELEASE_DIR/data $GGOBI_RELEASE_DIR/ggobi.pc  $GGOBI_RELEASE_DIR/share $TMP_DIR/
  find $TMP_DIR  -name '*.in' -exec rm {} \;
  chmod a+x $TMP_DIR/bin/ggobi

else
    # Build from here, the developer directory.
   $MAKE -C $BINARY_DIR install prefix=${TMP_DIR}/usr/local ggobi_install_home=${TMP_DIR}/usr/local
fi

# Build the rest of the staging area.
if ! test -d  ${TMP_DIR}/Resources ; then
  mkdir ${TMP_DIR}/Resources
fi

cp postflight $TMP_DIR/Resources

# Copy the relevant files to the staging area's resources.
cd $BINARY_DIR
cp Welcome.txt Readme.txt  ${TMP_DIR}/Resources
cp License.txt ${TMP_DIR}/Resources/License.txt



# Open the interactive version of PackageMakager
# with the relevant settings.
if test -z "$NO_PACKAGE" ; then
  open GGobiPackageCreate.pmsp
fi







