# This is placed in the top-level directory
# of the ggobi suite and is a convenience
# for 

TOP=@TOP@
INSTALL_DIR=@INSTALL_DIR@

XML_UTILS=@XML_UTILS@

UTILS=$(XML_UTILS:%=bin/%)
PLUGIN_DIRS=@PLUGIN_DIRS@

CUR_DIR=$(shell pwd)

include Makeconf

GTK_EXT=lib/libgtkext.@SHLIB_EXT@

all: $(GTK_EXT) bin/ggobi.bin @EMBED@ $(UTILS) @PACKAGES@ Plugins

.PHONY:	lib Rggobi Pythonggobi Perlggobi

lib/libgtkext.@SHLIB_EXT@:
	$(MAKE) -C gtkext/src install

ggobi bin/ggobi.bin: $(GTK_EXT)
	$(MAKE) -C src ../bin/ggobi.bin

lib/libggobi.@SHLIB_EXT@ lib: $(GTK_EXT)
	$(MAKE) -C src ../lib/libggobi.@SHLIB_EXT@


bin/xmlConvert:
	$(MAKE) -C src ../bin/xmlConvert

HEADER_FILES=$(wildcard include/*.h) 

# Should use install command.
install: bin/ggobi.bin
	if test -n "${EMBED_LIB}" ; then  \
	  $(INSTALL) $(INSTALL_FLAGS) $(EMBED_LIB) $(libdir) ;\
	fi
	$(INSTALL) bin/ggobi-config $(bindir)
	$(INSTALL) bin/ggobi $(bindir)
	if ! test -d $(includedir) ; then $(INSTALL) -d $(includedir) ; fi
	$(INSTALL) $(INSTALL_FLAGS) $(HEADER_FILES) $(includedir)


Rggobi: @EMBED_LIB@
	(GGOBI_ROOT=`pwd` ; export GGOBI_ROOT ; @R_BIN@ INSTALL -c @R_PKG_DIR@ $@)

Python: @EMBED_LIB@
	@if test -d Python ; then \
	   $(MAKE) -C Python ; \
	else \
	   echo "The python module is not present. Download it and reconfigure."
	fi


ifneq (${PLUGIN_DIRS},)
Plugins:  @EMBED_LIB@
	if test -n "${PLUGIN_DIRS}" ; then \
	  for f in $(PLUGIN_DIRS) ; do \
	    echo "Building plugin $$f" ; \
	      ./share/tools/plugin $$f ; \
	  done \
	fi 
else
Plugins:
	@echo "No ggobi plugins configured for building"
endif

clean:
	for f in src gtkext/src ; do \
	  $(MAKE) -C $$f clean ; \
	done

distclean: clean
	-rm config.cache config.log
	-rm lib/*.so
	-rm bin/ggobi.bin bin/xmlConvert

# other scripts generated by autoconf
