# This is placed in the top-level directory
# of the ggobi suite and is a convenience
# for accessing the different sub-parts of the 
# source base.

TOP=@TOP@
INSTALL_DIR=@INSTALL_DIR@

XML_UTILS=@XML_UTILS@

UTILS=$(XML_UTILS:%=bin/%)
PLUGIN_DIRS=@PLUGIN_DIRS@

CUR_DIR=$(shell pwd)

include Makeconf

GTK_EXT=lib/libgtkext.@SHLIB_EXT@

all: $(GTK_EXT) bin/ggobi.bin @EMBED_LIB@ $(UTILS) @PACKAGES@ buildPlugins

.PHONY:	lib Rggobi Pythonggobi Perlggobi

lib/libgtkext.@SHLIB_EXT@:
	$(MAKE) -C gtkext/src install

ggobi bin/ggobi.bin: $(GTK_EXT)
	$(MAKE) -C src ../bin/ggobi.bin

lib/libggobi.@SHLIB_EXT@ lib: $(GTK_EXT)
	$(MAKE) -C src ../lib/libggobi.@SHLIB_EXT@


bin/xmlConvert:
	$(MAKE) -C src ../bin/xmlConvert

include Plugins


HEADER_FILES=$(wildcard include/*.h) 

install: all bin/ggobi.bin ggobirc
ifeq (${LOCAL_INSTALL},)
	if test -n "${EMBED_LIB}" ; then  \
	  $(INSTALL) -d $(libdir) ; \
	  $(INSTALL) $(INSTALL_FLAGS) $(EMBED_LIB) $(libdir) ;\
	  $(INSTALL) $(INSTALL_FLAGS) $(GTK_EXT) $(libdir) ;\
	fi
	if ! test  -d $(ggobi_install_home) ; then \
		mkdir $(ggobi_install_home) ; \
	fi 
	$(INSTALL) -d $(ggobi_install_home)/data
	$(INSTALL) data/* $(ggobi_install_home)/data
	$(INSTALL) ggobirc $(ggobi_install_home)/
	$(INSTALL) -d $(ggobi_install_home)/bin
	$(INSTALL) bin/setLD.bsh $(ggobi_install_home)/bin
	$(INSTALL) bin/ggobi.bin $(ggobi_install_home)/bin
	$(INSTALL) -d $(ggobi_install_home)/lib
	$(INSTALL) lib/* $(ggobi_install_home)/lib
	$(INSTALL) -d $(bindir)
	$(INSTALL) bin/ggobi-config $(bindir)
	$(INSTALL) bin/ggobi $(bindir)
	if ! test -d $(includedir) ; then $(INSTALL) -d $(includedir) ; fi
	$(INSTALL) $(INSTALL_FLAGS) $(HEADER_FILES) include/GGStructSizes.c $(includedir)
	$(INSTALL) -d $(ggobi_install_home)/plugins
	$(MAKE) installPlugins

#	for i in $(PLUGIN_DIRS) ; do \
#	    cd plugins/$$i ; make install ggobi_install_home=$(ggobi_install_home) ; \
#	done
else
	@echo ""
	@echo "Local installation so no need to move files"
	@echo ""
endif


ggobirc: Plugins
	echo "<ggobirc>" > $@
	echo "<plugins>" >> $@ 
	for i in $(PLUGIN_DIRS) ; do \
	  echo "" >> $@ ; \
	  cat plugins/$$i/plugin.xml >> $@ ; \
	done
	echo "</plugins>" >> $@ 
	echo "</ggobirc>" >> $@

Rggobi: @EMBED_LIB@
	if test -d Rggobi ; then \
		@R_BIN@ INSTALL -c @R_PKG_DIR@ $@  \
	else \
		@echo "No Rggobi directory here. Untar the Rggobi distribution first!"
	fi


#	(GGOBI_ROOT=`pwd` ; export GGOBI_ROOT ; @R_BIN@ INSTALL -c @R_PKG_DIR@ $@)

Python: @EMBED_LIB@
	@if test -d Python ; then \
	   $(MAKE) -C Python ; \
	else \
	   echo "The python module is not present. Download it and reconfigure."
	fi

GGOBI_HOME=$(shell pwd)



ifneq (${PLUGIN_DIRS},)
buildPlugins:  @EMBED_LIB@
	  for f in $(PLUGIN_DIRS) ; do \
	    echo "Building plugin $$f" ; \
	    export GGOBI_HOME ; $(GGOBI_HOME)/share/tools/plugin $$f ; \
	  done \

installPlugins:
	for f in ${PLUGIN_DIRS} ; do \
	  export GGOBI_HOME ; $(GGOBI_HOME)/share/tools/plugin --install=$(ggobi_install_home) $$f ; \
	done

else

buildPlugins:
	@echo "No ggobi plugins configured for building"

installPlugins:
	@echo "No plugins to install"

endif

clean:
	for f in src gtkext/src ; do \
	  $(MAKE) -C $$f clean ; \
	done

distclean: clean
	-rm config.cache config.log
	-rm lib/*.so
	-rm bin/ggobi.bin bin/xmlConvert

# other scripts generated by autoconf
