GGobi Installation
==================

Downloads
---------

Binaries and source code can be downloaded from 
   http://www.ggobi.org

--GGobi--
  Windows binary
  tar'd gzip'd source code (for linux)

--Rggobi--
  Rggobi.tar.gz  file containing the necessary pieces to build the
                 link between R and ggobi

Ways to build GGobi under linux or unix 
=======================================

There are various ways to use ggobi and hence different features that
one can enable when compiling ggobi.
  a) stand-alone,

  b) stand-alone with XML support,

  c) stand-alone & embeddable ggobi library,
      (this implies an embeddable ggobi library is created.)

  d) stand-alone & embeddable ggobi library with XML support,

  d) R interface
     (allowing ggobi to be controlled from R)

  e) Python interface
      (allowing ggobi to be controlled from Python)       

  f) Perl interface
      (allowing ggobi to be controlled from Perl)       

The default build is embeddable ggobi library with with XML support.

There is also optional support for reading data directly from a MySQL
database. (The configuration for this has not been ironed out yet.)

We strongly recommend compiling with XML support, because it provides
more flexibility for file input and output and facilitates
portability. For this option, you will need to have Daniel Veillard's
libxml2 installed and you will need to indicate where the development
header files are located. See instructions for getting this library
and building it below.

Nevertheless we provide instructions for all the different build
methods, starting with the simplest. (Note that gmake is really used,
but make should default to this on linux. You may need to force make
to be gmake on other unix systems.)

----delete this part-----
a) Stand-alone

Download the tar.gz version of the code, unpack it. The type:

./configure
make

Then to run ggobi type:

bin/ggobi <datafilename> 

b) Stand-alone with XML support

If the libxml2 library is installed on your system (common!) then
type:

./configure --with-xml
make

However you may need to build the libxml2 library before
starting (instructions below and in separate file INSTALL-xml.html).
Then type:

./configure --with-xml=$HOME/XML/libxml2-x.x.x
make

where $HOME/XML is of course replaced by the directory in which you're
building libxml2, and the x's in libxml2-x.x.x are replaced by by the
version of libxml2 you downloaded and unpacked. You can use
xml2-config to check the location of the libxml2 installation. 


c) Stand-alone and embeddable ggobi library

./configure --enable-embed
make 

d) Stand-alone and embeddable ggobi library with XML support

If the libxml2 library is installed on your system (common!) then
type:

./configure --with-xml --enable-embed
make 

However you may need to build the libxml2 library (not common!) before
starting (instructions below and in separate file INSTALL-xml.html).
Then type:

./configure --with-xml=$HOME/XML/libxml2-x.x.x --enable-embed
make

where $HOME/XML is of course replaced by the directory in which you're
building libxml2, and the x's in libxml2-x.x.x are replaced by by the
version of libxml2 you downloaded and unpacked. You can use
xml2-config to check the location of the libxml2 installation. 

----delete to here-----

BUILDING THE DEFAULT: embeddable library with xml support

Download the tar.gz version of the code, unpack it. The type:

./configure
make

Then to run ggobi type:

bin/ggobi <datafilename> 

(You may see the message "No plugins configured for build" which can
be ignored.)

BUILDING PLUGINS: ***Need to add something here***

R INTERFACE

Install R after downloading and following instructions from
  http://www.R-project.org

From the ggobi web site, download the latest Rggobi tar.gz.

Become root:

% su

Set a symbolic link to the ggobi library in the
/usr/local/lib directory (the one above where R resides):

% ln -s $GGOBI_ROOT/lib/libggobi.so /usr/local/lib/.

Install the Rggobi library:

% R CMD INSTALL Rggobi_0.51-0.tar.gz

which will create a directory called Rggobi in the
/usr/local/lib/R/library directory.

Exit superuser status.

% exit              

You are now ready to test out the link. Start R:

% R
> library(Rggobi)
> ggobi()
> ls(pos=2)      # lists the ggobi functionality available

XML support:
============

Some Linux systems have a version of libxml installed by default in
/usr/lib or /usr/local/lib and headers in
/usr/local/include/gnome-xml.  In some cases, these are older
versions of libxml and will not work with ggobi. While it would be
simpler to install libxml2 on your system and replace the existing
one, that approach may break other applications.

To deal with this need for a more recent version of libxml2 while
leaving the older version as the installed default library, one has
to follow these steps:
   
   1) download libxml2 and compile it in a non-system directory as
      described above.  This directory might be in your home
      directory. The compilation should leave you with a directory
      libxml2-2.x.x/ which contains (amongst other things)
          a) an include directory in which the header files such as
             parser.h and tree.h reside;
          b) a .libs/ directory in which libxml2.so resides.
             Note the name of this top-level directory. 

   2) configure the ggobi distribution using the --with-xml flag as
       cd ggobi
       ./configure --with-xml=/top-level/directory/of/libxml2

       make

This should be sufficient to _compile_ ggobi with the correct include
and library files. However, when one runs ggobi, it will not
necessarily find that newer library, but instead may use the system
default one in /usr/lib or wherever.  The ggobi script in bin/ however
takes care of this by setting the LD_LIBRARY_PATH appropriately to
refer to the .libs/ directory.

Getting libxml2: (See INSTALL-xml.html for more complete instructions)
==============

You will need to have the libxml2 library, NOT libxml-1.x.x. You can
download this from

   ftp.gnome.org/pub/GNOME/stable/sources/libxml2

or use the version that comes with the ggobi distribution. Untar it,
change directory to the top level of that source tree and give the two
commands
      ./configure
      make

GGobi under Windows 
============================

Installation from Binary
------------------------

Simply download the ggobi installer from the website and execute it.

RSGGobi - Running GGobi from R
-----------------------------

Install GGobi, then download the Windows Rggobi binary package and install it
via the RGUI.

Compiling ggobi on windows
--------------------------

Please see the instructions on the GGobi web page (or WindowsBuild.html in 
/developer/notes).
