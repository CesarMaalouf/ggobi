ifndef GGOBI_HOME
 GGOBI_HOME=../..
endif

ifdef GGOBI_DEVELOPER
-include $(GGOBI_HOME)/local.config
else
-include $(GGOBI_HOME)/Makeconf
endif

ifdef ADMIN
 include Install/GNUmakefile.admin
endif

include local.config

ifdef LOCAL_BUILD

 GGOBI_CFLAGS=$(shell $(MAKE) --quiet -C $(GGOBI_HOME)/src cflags TOP=$(GGOBI_HOME))
 GGOBI_LIBS=$(shell $(MAKE) --quiet -C $(GGOBI_HOME)/src libs TOP=$(GGOBI_HOME))

else

ifdef GGOBI_CONFIG
 GGOBI_CFLAGS=$(shell $(GGOBI_CONFIG) --cflags)
 GGOBI_LIB=$(shell $(GGOBI_CONFIG) --libs)
else
 GGOBI_INCLUDE_DIR=-I$(GGOBI_HOME)
ifndef GGOBI_LIB
 GGOBI_LIB=-L$(GGOBI_HOME) -lggobi
endif
 GGOBI_CFLAGS=$(GGOBI_INCLUDE_DIR)
endif

endif

ifndef SRC
 SRC=$(wildcard *.c *.f)
endif

ifndef OBJS
 OBJS=$(patsubst %.c,%.o, $(SRC))
endif

ifndef SO_LD_FLAGS
 SO_LD_FLAGS=-shared
endif

GTK_LIBS=$(shell $(GTK_CONFIG) --libs)

GTK_CFLAGS=$(shell $(GTK_CONFIG) --cflags)

%.o: %.c
	$(CC) -c $(PIC_CFLAG) $(PLUGIN_CFLAGS) $(CFLAGS) $(GTK_CFLAGS) $(GGOBI_CFLAGS) $<

%.so: $(OBJS)
	$(CC) $(SO_LD_FLAGS) $(PLUGIN_LD_FLAGS) $(OBJS) -o $@ $(PLUGIN_LIBS) $(GGOBI_LIB) $(GTK_LIBS)

objects: 
	@echo "$(OBJS)"


install:
	@echo "I would be installing now into $(ggobi_install_home)"
	if test ! -d $(ggobi_install_home)/plugins ; then mkdir $(ggobi_install_home)/plugins ; fi
	if test ! -d $(ggobi_install_home)/plugins/${PLUGIN_NAME} ; then mkdir $(ggobi_install_home)/plugins/${PLUGIN_NAME} ; fi
	cp plugin.xml $(PLUGIN_NAME).$(DLL_EXT) $(ggobi_install_home)/plugins/${PLUGIN_NAME}/

# Docs and support files, e.g. R, Python, Perl files.

distclean: clean
	rm config.cache config.log $(PKG).so

clean:
	rm -f *.o *.so


ifndef ADMIN
local.config: local.config.in configure
	if test -r local.config ; then cp local.config local.config.bak ; fi
	./configure
endif

ifndef ADMIN
configure: configure.in
	autoconf
endif

show:
	@echo $(OBJS)
