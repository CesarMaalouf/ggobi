September 2005

Gradually restoring the option that allows the View and Interaction
Menus to be radio buttons; done for scatterplot and scatterplot matrix.
(The ggobirc "preference" is    <useRadioMenuItems on="true" /> )

Treating the Options like the Reset items, so that now tour menus
also appear in the display menubar as appropriate.

Removed the Reset menus for Brush and Scale from the main menubar.
Now when a display is in Brush or Scale mode, a menu with the
interaction mode name appears in the menubar of the display.  Moving
the brushing option from the display Options menu to the Brush menu.

Fixed a bug:  the 'Show axes' option wasn't working on the barchart
display Options menu.

Removed the DisplayTree item from the main menubar; added a "Show
DisplayTree" item to the bottom of the Display menu.

When a new display is opened, its initial variables are now chosen
based on the variables displayed in the display that was current when
the new one was initialized.

Added alt-t/p accelerators to toggle between persistent and transient
brushing; transient brush now drawn as a dotted line.  (One tester
says it doesn't work on the Mac.)

Corrected a bug in the behavior of the "linkby" notebook on the
brushing panel, and improved its behavior (I hope) so that only the
relevant tab in the notebook is sensitive for each display.  (One
tester says this isn't working; it works for the author.)

Split the ViewMode menu into a View menu (representing projection),
as needed, and an Interaction menu.  This involved changes to over 60
files.


July 2005

Fixed a bug in linking brushing by variable that was causing the wrong
variable to be designated the linking variable.

Fixed a (very recent) bug in the GraphLayout and ggvis plugins which
caused new windows to be imperfectly linked to the brethren.

Added new graphviz layout algorithms to the GraphLayout plugin.


New signal added for the creation of a new displayd object. This is
emitted after the display is fully constructed and is being
registered.  We will miss a display if it is constructed separately
and not explicitly added to the collection of known displays.  But
that currently never happens and will be rare even when we instantiate
the classes outside of the ggobi control panel, e.g. in RGtk.


The 'PlotMenu' plug-in provides the infrastructure for adding
pop-menus for splot's, i.e. panels on displays.  These are potentially
contentious, but are convenient at least for sophisticated users. As
plugins, they work well as an optional add-on.  We can add
functionality to this module and splot's as desired.


Drag and drop for parallel coordinates displays.  One can drag a
"panel" onto another panel and currently they get swapped in position.
Different strategies for inserting the initial panel beside the target
one and moving those in between is easily done also.


Two routines added to the "API": ggobi_data_set_var_type and
ggobi_data_set_time_var to allow for users to specify the type of a
variable and whether it is a time variable or not.


Menu item added to each display to bring the associated control panel
to the foreground.

Option to use check menu items for the interactive modes for a
display, i.e. Scale, Brush, Identify, ...  This gives a visual display
of what is the currently active mode and also a way to turn it off
directly rather than requiring to switch to a different,
display-dependent mode, e.g. XYPlot.  In ggobirc as <useRadioMenuItems
on="true" />



Internal changes 
   removed (ifdef'ed away) the calls to display_add()
   for each of the display types.  These resulted in display_add being
   called twice: there and via the extended_display_open_cb.  This
   fixes the message about "Display has already been added...."
   appearing.

   Information about mismatching structure sizes for plugins and
   "modules" (i.e. Rggobi) announce which module is complaining.
   (Added the GGobiPluginDetails to the call to
   checkGGobiStructSizes().)




June 2005

Paused tours  were causing problems with consuming large amount of
	cycles. This seems to be fixed now.


time variables  In the XML files, one can specify that a variable can
	be used as a time variable using an attribute time.  The value
	of the attribute should be "yes" or "true".  (No upper case!)
	Such variables can then be identified when creating a time
	series plot.
	








statusbar is now non-editable by the user.

parcoords_new and tsplot_new become *_with_vars
and the original versions  take an exta argument
 - displayd.

windowDisplayd has an field that allows the constructor to 
specify that we don't want a window. The creation
code then honors this and leaves the display to be managed
by the creator.

scatmat_new now takes a display argument and has changes to allow the
lack of a window. Pass NULL for the display argument and it will
create the basic display.


Added --home as an argument for ggobi and ggobi-config to compute
the location of the "installed" GGobi files.

GGobi home directory displayed on the spash screen

Configuration now supports --enable-local.



Getting the names of the data modes (getDataModeNames) now computes
these from the plugins by querying them dynamically. The caller should
free the resulting array of strings, but not the strings themselves.
The return type of the routine no longer refers to a constant array.

Added CSV to the DataModeNames since the enums and this list were out of synch.
This should be removed very soon.

Changed the order of initialization so that default plugins (input
plugins) are done in ggobiInit() as is the initialization of the
session options (initSessionOptions).

Fixed the error in addVariableInternal which made all variables categorical.
Switch on the number of levels.

Moved from built-in data formats/modes to extensible plugins and a
uniform framework. Each plugin lists its set of supported mode names.
Implications for Rggobi.



Read Excel files directly via --datamode=excel and
ExcelReader plugin on Windows.

Support for reading CSV files (either using the CSV 
or the ExcelReader plugin.)


Input plugins can have multiple modeName tags within a modeNames tag.

Input plugin modeName used as the target for --datamode=<name>

"About plugins" display window separates the general and input plugins
into separate pages.

Select input plugin/mode from the File selection menu when opening a
file.


	
	

Added an item `New' to the File menu

Added an item  `About plugins' to the Help menu

Added the ability to read an initialization file
   -init, GGOBIRC, ~/.ggobirc

Added the plugin mechanism, registered in the initialization file.

Added a plugin for viewing data
  (See the Data menu beside the Help assuming the plugin is found.)
