EXTRAS = -Wpointer-arith -Wcast-qual -Wcast-align

NEW_DEFS=1

ZIP=zip
AR=ar rc
CC=gcc
DLLTOOL=dlltool -k
DLLWRAP=dllwrap
WIN32=1

INNO=C:\\Program\ Files\\Inno\ Setup\\Compil32.exe
INNO=/cygdrive/c/Inno3/iscc.exe
INNO=c:\\Inno3\\iscc.exe
#INNO_FLAGS=/cc

include local.config

  # if building from the CVS repository
  # change this to .
LOCAL_INCLUDES=.
# -g -ggdb
DEBUG=-g
#DEBUG=-O2

DEFINES=-DGGOBI_MAIN -DHAVE_CONFIG_H=1

CFLAGS= $(DEBUG) -ansi -Wall  -mno-cygwin -mpentium \
         -fnative-struct -mwindows   $(INCLUDES:%=-I%) \
         -DWIN32=1 -DHAVE_CONFIG_H=1


SRC=array.c ash1d.c \
 barchart.c barchart_ui.c barchartClass.c \
 brush_api.c brush_bins.c brush.c brush_init.c brush_link.c brush_ui.c \
 color.c color_ui.c cpanel.c \
 datad.c display.c display_tree.c display_ui.c \
 edges.c exclusion.c exclusion_ui.c extendedDisplay.c fileio.c \
 ggobi-API.c ggobi.c ggobiClass.c \
 help.c identify.c identify_ui.c \
 impute.c impute_ui.c io.c jitter.c jitter_ui.c \
 limits.c lineedit.c lineedit_ui.c \
 main_ui.c make_ggobi.c menus.c missing.c \
 movepts.c movepts_ui.c noop-toggle.c \
 p1d.c p1d_ui.c \
 parcoords.c parcoords_ui.c parcoordsClass.c pipeline.c \
 ppcorr_ui.c \
 read_array.c read_data.c  \
 scale_api.c scale_click.c scale_drag.c scale_ui.c \
 scatmat.c scatmat_ui.c scatmatClass.c \
 scatterplot.c scatterplot_ui.c scatterplotClass.c \
 smooth_ui.c sphere.c sphere_ui.c splash.c \
 splot.c sp_plot.c sp_plot_axes.c sp_plot_edges.c subset.c subset_ui.c svd.c \
 texture.c timeplot.c time_ui.c tsdisplay.c tsPlot.c \
 tour1d.c tour1d_pp.c tour1d_pp_ui.c tour1d_ui.c tour_pp.c\
 tour2d.c tour2d_ui.c tour2d_pp.c tour2d_pp_ui.c \
 tour2d3.c tour2d3_ui.c \
 tour.c tourcorr.c tourcorr_ui.c \
 transform.c transform_ui.c \
 utils.c utils_gdk.c utils_ui.c \
 varchange.c varcircles.c varpanel_ui.c \
 vartable.c vartable_nbook.c vartable_ui.c \
 vector.c wvis.c wvis_ui.c win32_draw.c \
 writedata.c writedata_ui.c write_svg.c \
 xlines.c xyplot.c xyplot_ui.c \
\
 mt19937ar.c cokus.c \
 print.c s_erf.c 


SRC+=gtkextruler.c gtkexthruler.c gtkextvruler.c 
SRC+=read_xml.c write_xml.c  read_init.c write_state.c read_color.c plugin.c

# SRC+=dbms.c dbms_ui.c

# vardata.c vdialog_ui.c \ 
#  ctour_ui.c cpp_ui.c \
# pp_ui.c

OB=$(SRC:%.c=%.o)


ifdef USE_XML
 XML_SRC= read_xml.c write_xml.c
 XML_OB= read_xml.o write_xml.o

   # User must specify XML_INC_DIRS
 CFLAGS+=  -DUSE_XML=2 -DSUPPORT_PLUGINS=1 -DSUPPORT_INIT_FILES=1 $(XML_INC_DIRS:%=-I%)
   # User must specify XML_LIB_DIRS
# -lzlib (original) or -lz
 XML_LIBS= $(XML_LIB_DIRS:%=-L%) -lxml2  -lwsock32
#-liconv -lz -lwsock32
endif

LIBBASE=ggobi
LIB=lib$(LIBBASE).a
DLL=ggobi.dll
#DLL=$(LIB:.a=.dll)

DEF=$(DLL:.dll=.def)

ifdef OLD
IMPBASE=$(LIBBASE)_dll
IMP=lib$(IMPBASE).a
EXP=lib$(IMPBASE).exp
endif


ifndef LIB_DIRS
 LIB_DIRS=$(GDK_LIB_DIR) $(GTK_LIB_DIR) $(GLIB_LIB_DIR)
endif

LIBS=$(LIB_DIRS:%=-L%) -lgdk -lgtk -lglib-2.0

USE_DLL=1
ifdef USE_DLL
ggobi ggobi.exe: $(DLL) ggobiMain.o
	$(CC) $(DEBUG) -o ggobi ggobiMain.o -L. -lggobi ${EXTRA_LIBS} $(LIBS) $(XML_LIBS)  -lm 
else
ggobi.exe: $(OB)
	$(CC) $(DEBUG) -o ggobi $(OB) -L. ${EXTRA_LIBS} $(LIBS) $(XML_LIBS)  -lm 
endif                

dll: $(DLL)
lib: $(LIB)
def: $(DEF)

cflags:
	@echo "${CFLAGS}"

ifndef CC_DRIVER
 CC_DRIVER=$(shell cygpath -w $(dirname $(CC)))\\$(basename $(CC))
endif
b:
	@echo "${CC} $(dirname $(CC)) $(basename $(CC))"

#	@echo "${CC_DRIVER}"

ifdef OLD
$(DLL): $(LIB) $(DEF) $(IMP)  
	$(DLLWRAP) -DBUILDING_DLL=1 --output-def $(DEF) --driver-name ${CC_DRIVER} \
	--dllname $@\
	--output-lib $@ $(LIB) $(LIBS) $(LLIBS) \
	$(XML_LIBS) $(LDFLAGS) -mwindows -mno-cygwin
else
# $(IMP)  
$(DLL): $(LIB) $(DEF) ggobi.a
	$(CC) --shared -s -mwindows -o $@ $(DEF) ggobi.a $(LIBS) $(LLIBS) $(XML_LIBS) $(LDFLAGS)

#	$(DLLWRAP) -DBUILDING_DLL=1 --def $(DEF) -o $@ $(OB) $(LIBS) $(LLIBS)	$(XML_LIBS) $(LDFLAGS) -mwindows -mno-cygwin
endif

#$(DLL): $(LIB) $(DEF) 
#	gcc -shared -Wl -implib libGgobi.a -o Ggobi.dll $(OB)

main_ui.lo: main_ui.c
	$(CC) -DAS_GGOBI_LIBRARY $(CFLAGS) $(INC) -o $@ -c $<

ifdef OLD
$(LIB): main_ui.lo $(OB) 
	$(AR) $@ $^
else
$(LIB): $(DEF) ggobi.a
	$(DLLTOOL) --dllname $(DLL) --def $(DEF) --output-lib $@
endif

ggobi.a: $(OB)
	ar cr $@ $(OB)
	ranlib $@


ifdef NEW_DEFS
$(DEF): $(OB)
ifdef COMPUTE_DEFS
	echo EXPORTS > $@
	nm $(OB) > tmp
	sed -n '/^........ [T] _/s/^........ [T] _/ /p' tmp >> $@
	cat exported-vars >> $@
	rm tmp
else
	cp ManualGGobi.def $@
endif

else
$(DEF): $(OB)
	$(DLLTOOL) --kill-at --export-all -D $(DLL) --output-def $@ $^
endif

$(IMP): $(DEF)
	$(DLLTOOL) -d $< -l $@ -D $(DLL)

clean: 
	rm -f *.o ggobi *.a *.dll *.def

ifndef INC
INC= -I. -I/gtk/src/gtk+ -I/gtk/src/gtk+/gdk -I/gtk/src/glib 

GTK_SUB_DIRS=glib glib/module gtk+/gdk/win32 gdk gtk-win/pthreads
INC=-I. $(GLIB_DIR:%=-I%) $(GTK_DIR:%=-I%) $(GTK_SUB_DIRS:%=-I$(GTK_DIR)/%)
endif

#LIBS= -L/gtk/src/gtk+/gtk  -L/gtk/src/gtk+/gdk -L/gtk/src/glib

#     -L ../gtk-win/gtk+/gtk  \
#     -L ../gtk-win/glib \
#     -L ../gtk-win/pthreads 

.c.o:
	$(CC) -c $(CFLAGS) $(DEFINES) $(INC)  $*.c

# Emacs's tags for navigating through the source.
etags:
	etags $(SRC)

# The version for vi
tags:
	tags $(SRC)


ggobi-API.o ggobi.o: config.h

config.h: developerConfigure
	./developerConfigure

developerConfigure: developerConfigure.in
	autoconf $< > $@
	chmod +x $@

# If USE_XML, may need to add XML_LIB_DIRS and XML_INC_DIRS
local.config:
	@echo "# Whether to enable support for reading XML data" > $@
	@echo "# USE_XML=1" >> $@
	@echo "# XML_INC_DIRS=" >> $@
	@echo "# XML_LIB_DIRS=" >> $@
	@echo "# Location of dmalloc" >> $@
	@echo "# DM=1" >> $@

ifdef USE_XML
xmlConvert: xmlConvert.o libggobi.a
	$(CC) -o $@ xmlConvert.o $(XML_LIBS) -L. -lggobi 
endif

DATA= flea.dat flea.xml flea.col flea.colors flea.glyphs \
      stdColorMap.xml tmin.xml \
      ggobi.dtd

ifndef OTHER_DLL_LIB
  OTHER_DLL_LIB=/cygwin/home/duncan/libs
endif
OTHER_DLL_NAMES= gdk-1.3 glib-1.3 gmodule-1.3 gnu-intl gtk-1.3 iconv-1.3
OTHER_DLLS=$(OTHER_DLL_NAMES:%=$(OTHER_DLL_LIB)/%.dll)


testDLL.dll: testDLL.o libggobi.a 
	$(CC) -mwindows -s -shared -o $@ testDLL.def testDLL.o -L. -lggobi


foo:
	echo "${XML_INC_DIR}"

path:
	@echo "export PATH=${PATH}:${DOWNLOAD_DIR}/lib:$${LIB_XML}/lib:${LIB_ICONV}"

ifndef PWD
 PWD=$(shell cygpath -w `pwd`)
endif

# Replace the \ with \\\ to get through the sed...
SPWD=$(subst /,\\\\\\,${PWD})
pwd:
	@echo "${PWD}"
	@echo "${SPWD}"

libs:
	mkdir libs
	cp ${XML_LIB_DIRS}/*.dll ${LIB_ICONV}/*.dll ${LIB_DIRS}/*.dll libs/

Install/configureWin: Install/configureWin.in
	(cd Install ; autoconf configureWin.in > configureWin)

Install/ggobi.iss: Install/ggobi.iss.in Install/configureWin
	(cd Install ; ./configureWin)

# Create ggobi.iss locally so the files can be found
# from here and replace the new lines with line-feeds.
ggobi.iss: Install/ggobi.iss
	cp Install/ggobi.iss ggobi.iss-temp
	perl -p -e 's/\n/\r\n/;' ggobi.iss-temp > ggobi.iss
	rm ggobi.iss-temp

tmp/ggobirc: notes/ggobirc-windows
	if test ! -d tmp ; then mkdir tmp ; fi
	cp notes/ggobirc-windows tmp/ggobirc

installer: tmp/ggobirc libs ggobi.iss ggobi.exe libggobi.a ggobi.dll
	$(INNO) $(INNO_FLAGS) ggobi.iss
	mv Output/setup.exe Output/ggobi.exe

# xmlConvert
winggobi.zip: ggobi 
	strip ggobi.exe
	$(ZIP) $@ ggobi.exe $(DATA:%=data/%) $(OTHER_DLLS)

# include .depends
# DO NOT DELETE


